{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AlbumsService {\n  constructor(client) {\n    this.client = client;\n    this.BASE_URL = 'https://jsonplaceholder.typicode.com';\n  }\n  getAlbums() {\n    return of([{\n      id: 1,\n      title: 'Семейный альбом',\n      body: 'Описание 1'\n    }, {\n      id: 2,\n      title: 'Путешествия',\n      body: 'Описание 2'\n    }, {\n      id: 3,\n      title: 'Любимые моменты',\n      body: 'Описание 3'\n    }, {\n      id: 4,\n      title: 'Природа',\n      body: 'Описание 4'\n    }, {\n      id: 5,\n      title: 'Друзья',\n      body: 'Описание 5'\n    }]);\n  }\n  getAlbum(id) {\n    return this.client.get(`${this.BASE_URL}/albums/${id}`);\n  }\n  addAlbum(album) {\n    return this.client.post(`${this.BASE_URL}/albums`, album);\n  }\n  updateAlbum(album) {\n    return this.client.put(`${this.BASE_URL}/albums/${album.id}`, album);\n  }\n  deleteAlbum(id) {\n    return this.client.delete(`${this.BASE_URL}/albums/${id}`);\n  }\n  getAlbumPhotos(id) {\n    const photos = {\n      1: [{\n        id: 1,\n        albumId: 1,\n        thumbnailUrl: 'assets/images/photo1-1.jpg',\n        title: 'Фото 1-1'\n      }, {\n        id: 2,\n        albumId: 1,\n        thumbnailUrl: 'assets/images/photo1-2.jpg',\n        title: 'Фото 1-2'\n      }],\n      2: [{\n        id: 3,\n        albumId: 2,\n        thumbnailUrl: 'assets/images/photo2-1.jpg',\n        title: 'Фото 2-1'\n      }, {\n        id: 4,\n        albumId: 2,\n        thumbnailUrl: 'assets/images/photo2-2.jpg',\n        title: 'Фото 2-2'\n      }],\n      3: [{\n        id: 5,\n        albumId: 3,\n        thumbnailUrl: 'assets/images/photo3-1.jpg',\n        title: 'Фото 3-1'\n      }, {\n        id: 6,\n        albumId: 3,\n        thumbnailUrl: 'assets/images/photo3-2.jpg',\n        title: 'Фото 3-2'\n      }]\n    };\n    console.log(photos, id);\n    return of(photos[id] ?? []);\n  }\n  static {\n    this.ɵfac = function AlbumsService_Factory(t) {\n      return new (t || AlbumsService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AlbumsService,\n      factory: AlbumsService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"AAIA,SAASA,EAAE,QAAQ,MAAM;;;AAKzB,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,MAAkB;IAAlB,WAAM,GAANA,MAAM;IAF1B,aAAQ,GAAG,sCAAsC;EAEP;EAE1CC,SAAS;IACP,OAAOJ,EAAE,CAAC,CACR;MAAEK,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,iBAAiB;MAAEC,IAAI,EAAE;IAAY,CAAE,EACvD;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,aAAa;MAAEC,IAAI,EAAE;IAAY,CAAE,EACnD;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,iBAAiB;MAAEC,IAAI,EAAE;IAAY,CAAE,EACvD;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAY,CAAE,EAC/C;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAY,CAAE,CAC/C,CAAC;EACJ;EAEAC,QAAQ,CAACH,EAAU;IACjB,OAAO,IAAI,CAACF,MAAM,CAACM,GAAG,CAAQ,GAAG,IAAI,CAACC,QAAQ,WAAWL,EAAE,EAAE,CAAC;EAChE;EAEAM,QAAQ,CAACC,KAAY;IACnB,OAAO,IAAI,CAACT,MAAM,CAACU,IAAI,CAAQ,GAAG,IAAI,CAACH,QAAQ,SAAS,EAAEE,KAAK,CAAC;EAClE;EAEAE,WAAW,CAACF,KAAY;IACtB,OAAO,IAAI,CAACT,MAAM,CAACY,GAAG,CAAQ,GAAG,IAAI,CAACL,QAAQ,WAAWE,KAAK,CAACP,EAAE,EAAE,EAAEO,KAAK,CAAC;EAC7E;EAEAI,WAAW,CAACX,EAAU;IACpB,OAAO,IAAI,CAACF,MAAM,CAACc,MAAM,CAAC,GAAG,IAAI,CAACP,QAAQ,WAAWL,EAAE,EAAE,CAAC;EAC5D;EAEAa,cAAc,CAACb,EAAU;IACvB,MAAMc,MAAM,GAAG;MACb,CAAC,EAAE,CACD;QAAEd,EAAE,EAAE,CAAC;QAAEe,OAAO,EAAE,CAAC;QAAEC,YAAY,EAAE,4BAA4B;QAAEf,KAAK,EAAE;MAAU,CAAE,EACpF;QAAED,EAAE,EAAE,CAAC;QAAEe,OAAO,EAAE,CAAC;QAAEC,YAAY,EAAE,4BAA4B;QAAEf,KAAK,EAAE;MAAU,CAAE,CACrF;MACD,CAAC,EAAE,CACD;QAAED,EAAE,EAAE,CAAC;QAAEe,OAAO,EAAE,CAAC;QAAEC,YAAY,EAAE,4BAA4B;QAAEf,KAAK,EAAE;MAAU,CAAE,EACpF;QAAED,EAAE,EAAE,CAAC;QAAEe,OAAO,EAAE,CAAC;QAAEC,YAAY,EAAE,4BAA4B;QAAEf,KAAK,EAAE;MAAU,CAAE,CACrF;MACD,CAAC,EAAE,CACD;QAAED,EAAE,EAAE,CAAC;QAAEe,OAAO,EAAE,CAAC;QAAEC,YAAY,EAAE,4BAA4B;QAAEf,KAAK,EAAE;MAAU,CAAE,EACpF;QAAED,EAAE,EAAE,CAAC;QAAEe,OAAO,EAAE,CAAC;QAAEC,YAAY,EAAE,4BAA4B;QAAEf,KAAK,EAAE;MAAU,CAAE;KAEvF;IAEDgB,OAAO,CAACC,GAAG,CAACJ,MAAM,EAAEd,EAAE,CAAC;IACvB,OAAOL,EAAE,CAACmB,MAAM,CAACd,EAAE,CAAC,IAAI,EAAE,CAAC;EAC7B;;;uBAlDWJ,aAAa;IAAA;EAAA;;;aAAbA,aAAa;MAAAuB,SAAbvB,aAAa;MAAAwB,YAFZ;IAAM;EAAA","names":["of","AlbumsService","constructor","client","getAlbums","id","title","body","getAlbum","get","BASE_URL","addAlbum","album","post","updateAlbum","put","deleteAlbum","delete","getAlbumPhotos","photos","albumId","thumbnailUrl","console","log","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\Web-Dev\\labb6\\my-app\\src\\app\\services\\albums.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Album, AlbumPhotos } from '../models/models';\nimport { of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlbumsService {\n\n  BASE_URL = 'https://jsonplaceholder.typicode.com';\n\n  constructor(private client: HttpClient) { }\n\n  getAlbums() {\n    return of([\n      { id: 1, title: 'Семейный альбом', body: 'Описание 1' },\n      { id: 2, title: 'Путешествия', body: 'Описание 2' },\n      { id: 3, title: 'Любимые моменты', body: 'Описание 3' },\n      { id: 4, title: 'Природа', body: 'Описание 4' },\n      { id: 5, title: 'Друзья', body: 'Описание 5' }\n    ]);\n  }\n\n  getAlbum(id: number): Observable<Album> {\n    return this.client.get<Album>(`${this.BASE_URL}/albums/${id}`);\n  }\n\n  addAlbum(album: Album): Observable<Album> {\n    return this.client.post<Album>(`${this.BASE_URL}/albums`, album);\n  }\n\n  updateAlbum(album: Album): Observable<Album> {\n    return this.client.put<Album>(`${this.BASE_URL}/albums/${album.id}`, album);\n  }\n\n  deleteAlbum(id: number): Observable<any> {\n    return this.client.delete(`${this.BASE_URL}/albums/${id}`);\n  }\n\n  getAlbumPhotos(id: number): Observable<AlbumPhotos[]> {\n    const photos = {\n      1: [\n        { id: 1, albumId: 1, thumbnailUrl: 'assets/images/photo1-1.jpg', title: 'Фото 1-1' },\n        { id: 2, albumId: 1, thumbnailUrl: 'assets/images/photo1-2.jpg', title: 'Фото 1-2' }\n      ],\n      2: [\n        { id: 3, albumId: 2, thumbnailUrl: 'assets/images/photo2-1.jpg', title: 'Фото 2-1' },\n        { id: 4, albumId: 2, thumbnailUrl: 'assets/images/photo2-2.jpg', title: 'Фото 2-2' }\n      ],\n      3: [\n        { id: 5, albumId: 3, thumbnailUrl: 'assets/images/photo3-1.jpg', title: 'Фото 3-1' },\n        { id: 6, albumId: 3, thumbnailUrl: 'assets/images/photo3-2.jpg', title: 'Фото 3-2' }\n      ]\n    };\n  \n    console.log(photos, id);\n    return of(photos[id] ?? []);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}